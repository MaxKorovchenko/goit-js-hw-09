{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAsDA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACLC,KAAKC,SAAW,GAGpCH,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,IA1DZM,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAIC,iBAEJ,IAAgCC,EAAAF,EAAIG,cAAcC,SAA1CC,EAAwBH,EAAxBX,MAAOe,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OAErBC,YAAW,WACT,IAAIC,EAAW,EAUf,GARApB,EAAcoB,EAAUJ,EAAMK,OAC3BC,MAAK,SAAAC,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MACjBsB,EAAA1B,GAAS2B,OAAOC,QAAQ,qBAAoCC,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,IAEnE0B,OAAM,SAAAL,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MAClBsB,EAAA1B,GAAS2B,OAAOI,QAAQ,oBAAmCF,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,IAGxC,IAAzB4B,OAAOZ,EAAOG,OAIlB,IAAMU,EAAKC,aAAY,WAGrBhC,EAFAoB,GAAY,EAEYJ,EAAMK,OAC3BC,MAAK,SAAAC,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MACjBsB,EAAA1B,GAAS2B,OAAOC,QACd,qBACEC,OADmB1B,EAAS,QAE7B0B,OADCG,OAAO5B,GAAS4B,OAAOb,EAAKI,QAAUpB,EAAW,GAClD,M,IAGJ2B,OAAM,SAAAL,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MAClBsB,EAAA1B,GAAS2B,OAAOI,QACd,oBACEF,OADkB1B,EAAS,QAE5B0B,OADCG,OAAO5B,GAAS4B,OAAOb,EAAKI,QAAUpB,EAAW,GAClD,M,IAGJgC,SAAQ,WACHb,IAAaU,OAAOZ,EAAOG,QAC7Ba,cAAcH,E,MAGnBd,EAAKI,M,GACPL,EAAMK,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.5.min.css';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n\n  const { delay, step, amount } = evt.currentTarget.elements;\n\n  setTimeout(() => {\n    let position = 1;\n\n    createPromise(position, delay.value)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n\n    if (Number(amount.value) === 1) {\n      return;\n    }\n\n    const id = setInterval(() => {\n      position += 1;\n\n      createPromise(position, delay.value)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `Fulfilled promise ${position} in ${\n              Number(delay) + Number(step.value) * (position - 1)\n            }ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            `Rejected promise ${position} in ${\n              Number(delay) + Number(step.value) * (position - 1)\n            }ms`\n          );\n        })\n        .finally(() => {\n          if (position === Number(amount.value)) {\n            clearInterval(id);\n          }\n        });\n    }, step.value);\n  }, delay.value);\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  });\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","Math","random","document","querySelector","addEventListener","evt","preventDefault","_elements","currentTarget","elements","delay1","step","amount","setTimeout","position1","value","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","Number","id","setInterval","finally","clearInterval"],"version":3,"file":"03-promises.3b9a125b.js.map"}