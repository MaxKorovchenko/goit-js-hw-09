{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAsDA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACLC,KAAKC,SAAW,GAGpCH,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,G,CA1DpBM,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAIC,iBAEJ,MAAQV,MAAAW,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAIK,cAAcC,SAElDC,YAAW,KACT,IAAIC,EAAW,EAUf,GARAnB,EAAcmB,EAAUN,EAAMO,OAC3BC,MAAK,EAACpB,SAAEA,EAAQC,MAAEA,MACjBoB,EAAAxB,GAASyB,OAAOC,QAAQ,qBAAqBvB,QAAeC,MAAU,IAEvEuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAClBoB,EAAAxB,GAASyB,OAAOG,QAAQ,oBAAoBzB,QAAeC,MAAU,IAG5C,IAAzByB,OAAOZ,EAAOK,OAChB,OAGF,MAAMQ,EAAKC,aAAY,KACrBV,GAAY,EAEZnB,EAAcmB,EAAUN,EAAMO,OAC3BC,MAAK,EAACpB,SAAEA,EAAQC,MAAEA,MACjBoB,EAAAxB,GAASyB,OAAOC,QACd,qBAAqBvB,QACnB0B,OAAOzB,GAASyB,OAAOb,EAAKM,QAAUnB,EAAW,OAEpD,IAEFwB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAClBoB,EAAAxB,GAASyB,OAAOG,QACd,oBAAoBzB,QAClB0B,OAAOzB,GAASyB,OAAOb,EAAKM,QAAUnB,EAAW,OAEpD,IAEF6B,SAAQ,KACHX,IAAaQ,OAAOZ,EAAOK,QAC7BW,cAAcH,EAAG,GAEnB,GACHd,EAAKM,MAAM,GACbP,EAAMO,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.5.min.css';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n\n  const { delay, step, amount } = evt.currentTarget.elements;\n\n  setTimeout(() => {\n    let position = 1;\n\n    createPromise(position, delay.value)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n\n    if (Number(amount.value) === 1) {\n      return;\n    }\n\n    const id = setInterval(() => {\n      position += 1;\n\n      createPromise(position, delay.value)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `Fulfilled promise ${position} in ${\n              Number(delay) + Number(step.value) * (position - 1)\n            }ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            `Rejected promise ${position} in ${\n              Number(delay) + Number(step.value) * (position - 1)\n            }ms`\n          );\n        })\n        .finally(() => {\n          if (position === Number(amount.value)) {\n            clearInterval(id);\n          }\n        });\n    }, step.value);\n  }, delay.value);\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  });\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","Math","random","document","querySelector","addEventListener","evt","preventDefault","delay1","step","amount","currentTarget","elements","setTimeout","position1","value","then","$parcel$interopDefault","Notify","success","catch","failure","Number","id","setInterval","finally","clearInterval"],"version":3,"file":"03-promises.ece95933.js.map"}